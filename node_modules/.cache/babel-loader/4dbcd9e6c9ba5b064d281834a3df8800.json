{"ast":null,"code":"import _slicedToArray from \"/home/hadi/Documents/projects/dump/my-Todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hadi/Documents/projects/dump/my-Todo/src/components/todo.js\";\nimport React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Box, Button, TextField, ListItemSecondaryAction, ListItem, ListItemIcon, ListItemText, Checkbox, ButtonGroup } from \"@material-ui/core\";\nconst useStyless = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    backgroundColor: \"#607d8b\",\n    color: \"white\",\n    marginTop: \"10px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    minWidth: \"500px\"\n  }\n}));\n\nconst Content = props => {\n  const _React$useState = React.useState(props.item.content),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        cont = _React$useState2[0],\n        setCont = _React$useState2[1];\n\n  const handleChange = event => {\n    setCont(event.target.value);\n  };\n\n  const handleDone = () => {\n    //props.item.content = cont;\n    props.handleEdit(Object.assign({}, props.item, {\n      content: cont\n    }));\n    props.setEdit(false);\n  };\n\n  const handleCancel = () => {\n    props.setEdit(false);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"normal-textarea\",\n    placeholder: \"Can't be Empty\",\n    value: cont,\n    margin: \"normal\",\n    onChange: handleChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleDone,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Done\"), React.createElement(Button, {\n    onClick: handleCancel,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Cancel\"));\n};\n\nconst Cart = props => {\n  const _React$useState3 = React.useState(props.isEditing),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        edit = _React$useState4[0],\n        setEdit = _React$useState4[1];\n\n  const handleClick = () => {\n    props.handleDel(props.item);\n  };\n\n  const handleEdit = () => {\n    setEdit(true);\n  };\n\n  const _React$useState5 = React.useState([0]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        checked = _React$useState6[0],\n        setChecked = _React$useState6[1];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return React.createElement(ListItem, {\n    role: undefined,\n    dense: true,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    edge: \"start\",\n    tabIndex: -1,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), edit ? React.createElement(Content, {\n    item: props.item,\n    setEdit: setEdit,\n    handleEdit: props.handleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n    primary: props.item.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }), React.createElement(ButtonGroup, {\n    variant: \"text\",\n    color: \"primary\",\n    \"aria-label\": \"full-width contained primary button group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleEdit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    onClick: handleClick,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/home/hadi/Documents/projects/dump/my-Todo/src/components/todo.js"],"names":["React","Typography","makeStyles","Box","Button","TextField","ListItemSecondaryAction","ListItem","ListItemIcon","ListItemText","Checkbox","ButtonGroup","useStyless","theme","root","padding","spacing","backgroundColor","color","marginTop","display","flexDirection","justifyContent","minWidth","Content","props","useState","item","content","cont","setCont","handleChange","event","target","value","handleDone","handleEdit","Object","assign","setEdit","handleCancel","Cart","isEditing","edit","handleClick","handleDel","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","undefined"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Box,\n  Button,\n  TextField,\n  ListItemSecondaryAction,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Checkbox,\n  ButtonGroup\n} from \"@material-ui/core\";\n\nconst useStyless = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    backgroundColor: \"#607d8b\",\n    color: \"white\",\n    marginTop: \"10px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    minWidth: \"500px\"\n  }\n}));\n\nconst Content = props => {\n  const [cont, setCont] = React.useState(props.item.content);\n\n  const handleChange = event => {\n    setCont(event.target.value);\n  };\n  const handleDone = () => {\n    //props.item.content = cont;\n    props.handleEdit(Object.assign({}, props.item, { content: cont }));\n    props.setEdit(false);\n  };\n  const handleCancel = () => {\n    props.setEdit(false);\n  };\n  return (\n    <React.Fragment>\n      <TextField\n        id=\"normal-textarea\"\n        placeholder=\"Can't be Empty\"\n        value={cont}\n        margin=\"normal\"\n        onChange={handleChange}\n        required\n      />\n      <Button onClick={handleDone} color=\"inherit\">\n        Done\n      </Button>\n      <Button onClick={handleCancel} color=\"inherit\">\n        Cancel\n      </Button>\n    </React.Fragment>\n  );\n};\n\nconst Cart = props => {\n  const [edit, setEdit] = React.useState(props.isEditing);\n\n  const handleClick = () => {\n    props.handleDel(props.item);\n  };\n  const handleEdit = () => {\n    setEdit(true);\n  };\n\n  const [checked, setChecked] = React.useState([0]);\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n  return (\n    <ListItem role={undefined} dense button>\n      <ListItemIcon>\n        <Checkbox edge=\"start\" tabIndex={-1} disableRipple />\n      </ListItemIcon>\n      {edit ? (\n        <Content\n          item={props.item}\n          setEdit={setEdit}\n          handleEdit={props.handleEdit}\n        />\n      ) : (\n        <>\n          <ListItemText primary={props.item.content} />\n          <ButtonGroup\n            variant=\"text\"\n            color=\"primary\"\n            aria-label=\"full-width contained primary button group\"\n          >\n            <Button onClick={handleEdit} color=\"primary\">\n              Edit\n            </Button>\n            <Button onClick={handleClick} color=\"primary\">\n              Remove\n            </Button>\n          </ButtonGroup>\n          {/* <ListItemSecondaryAction>\n                  <Button onClick={handleEdit} color=\"primary\">Edit</Button>\n                <Button onClick={handleClick} color=\"primary\">Remove</Button>\n                </ListItemSecondaryAction> */}\n        </>\n      )}\n    </ListItem>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}