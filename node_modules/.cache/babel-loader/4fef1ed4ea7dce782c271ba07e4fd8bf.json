{"ast":null,"code":"const initState = [{\n  id: 0,\n  content: 'this is a test',\n  visibility: true\n}];\n\nfunction doThis(state = initState, action) {\n  console.log(action, action.type);\n\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.item];\n\n    case 'DEL':\n      return state.filter(item => item.id !== action.id);\n\n    case 'EDIT':\n      let edited = Object.assign([], state);\n      edited.forEach((item, i) => {\n        if (action.item.id === i) {\n          item.title = action.item.title ? item.title : action.item.title;\n          item.text = action.item.text ? item.text : action.item.text;\n        }\n      });\n      return edited;\n\n    default:\n      return state;\n  }\n}\n\nexport default doThis;","map":{"version":3,"sources":["/home/hadi/Documents/projects/dump/my-portfolio/src/reducers/todo.js"],"names":["initState","id","content","visibility","doThis","state","action","console","log","type","item","filter","edited","Object","assign","forEach","i","title","text"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAAC;AACfC,EAAAA,EAAE,EAAC,CADY;AAEfC,EAAAA,OAAO,EAAC,gBAFO;AAGfC,EAAAA,UAAU,EAAE;AAHG,CAAD,CAAlB;;AAMA,SAAUC,MAAV,CAAkBC,KAAK,GAAGL,SAA1B,EAAqCM,MAArC,EAA6C;AACzCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EAAoBA,MAAM,CAACG,IAA3B;;AACA,UAAOH,MAAM,CAACG,IAAd;AACI,SAAK,KAAL;AACI,aAAO,CAAC,GAAGJ,KAAJ,EAAWC,MAAM,CAACI,IAAlB,CAAP;;AACJ,SAAK,KAAL;AACI,aAAOL,KAAK,CAACM,MAAN,CAAaD,IAAI,IAAKA,IAAI,CAACT,EAAL,KAAYK,MAAM,CAACL,EAAzC,CAAP;;AACJ,SAAK,MAAL;AACI,UAAIW,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,KAAlB,CAAb;AACAO,MAAAA,MAAM,CAACG,OAAP,CAAe,CAACL,IAAD,EAAOM,CAAP,KAAa;AACxB,YAAIV,MAAM,CAACI,IAAP,CAAYT,EAAZ,KAAmBe,CAAvB,EAA0B;AACtBN,UAAAA,IAAI,CAACO,KAAL,GAAcX,MAAM,CAACI,IAAP,CAAYO,KAAb,GAAqBP,IAAI,CAACO,KAA1B,GAAkCX,MAAM,CAACI,IAAP,CAAYO,KAA3D;AACAP,UAAAA,IAAI,CAACQ,IAAL,GAAaZ,MAAM,CAACI,IAAP,CAAYQ,IAAb,GAAoBR,IAAI,CAACQ,IAAzB,GAAgCZ,MAAM,CAACI,IAAP,CAAYQ,IAAxD;AACH;AACJ,OALD;AAMA,aAAON,MAAP;;AACJ;AACI,aAAOP,KAAP;AAfR;AAiBH;;AACD,eAAeD,MAAf","sourcesContent":["const initState = [{\n    id:0,\n    content:'this is a test',\n    visibility: true\n}];\n\nfunction  doThis (state = initState, action ){\n    console.log(action, action.type);\n    switch(action.type){\n        case 'ADD':\n            return [...state, action.item];\n        case 'DEL':\n            return state.filter(item => (item.id !== action.id));\n        case 'EDIT':\n            let edited = Object.assign([], state);\n            edited.forEach((item, i) => {\n                if( action.item.id === i ){\n                    item.title = (action.item.title)? item.title : action.item.title ;\n                    item.text = (action.item.text)? item.text : action.item.text ;\n                }\n            });\n            return edited;\n        default:\n            return state;\n    }\n}\nexport default doThis;"]},"metadata":{},"sourceType":"module"}