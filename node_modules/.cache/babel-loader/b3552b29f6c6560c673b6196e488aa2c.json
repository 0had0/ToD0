{"ast":null,"code":"import _slicedToArray from \"/home/hadi/Documents/projects/dump/my-portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hadi/Documents/projects/dump/my-portfolio/src/components/show.js\";\nimport React, { useState } from 'react';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ToDo from './todo';\nimport { addTodo, delTodo } from '../actions/index';\nimport { TextField, Button, Box } from '@material-ui/core';\n\nconst Show = props => {\n  function componentDidMount() {\n    props.store.subscribe(() => console.log(props.store.getState()));\n  }\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        elm = _useState2[0],\n        setElm = _useState2[1];\n\n  const useStyless = makeStyles(theme => ({\n    padd: {\n      padding: theme.spacing(3, 2),\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  }));\n  const classes = useStyless();\n\n  const handelChange = event => {};\n\n  const handleDel = id => {\n    console.log(\"Remove button is clicked\");\n    props.store.dispatch(delTodo(id));\n  };\n\n  const handleEdit = id => {};\n\n  const handleChange = event => {\n    console.log(\"change is affected\");\n    setElm(event.target.value);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Container, {\n    className: classes.padd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Box, {\n    position: \"static\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"normal-textarea\",\n    label: \"ToDo ...\",\n    placeholder: \"Memorizable thing ;)\",\n    value: elm,\n    margin: \"normal\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => {\n      props.store.dispatch(addTodo({\n        id: props.store.getState().length,\n        content: elm,\n        visiblity: true\n      }));\n      setElm('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Add\")), props.store.getState().map((item, i) => {\n    return React.createElement(ToDo, {\n      item: item,\n      id: i,\n      isEditing: false,\n      handelChange: handelChange,\n      handleEdit: handleEdit,\n      handleDel: handleDel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }), \" \"));\n};\n\nexport default Show;","map":{"version":3,"sources":["/home/hadi/Documents/projects/dump/my-portfolio/src/components/show.js"],"names":["React","useState","Container","makeStyles","ToDo","addTodo","delTodo","TextField","Button","Box","Show","props","componentDidMount","store","subscribe","console","log","getState","elm","setElm","useStyless","theme","padd","padding","spacing","display","justifyContent","flexDirection","alignItems","classes","handelChange","event","handleDel","id","dispatch","handleEdit","handleChange","target","value","length","content","visiblity","map","item","i"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport Container from '@material-ui/core/Container';\nimport {makeStyles} from '@material-ui/core/styles';\n\nimport ToDo from './todo';\nimport {addTodo, delTodo} from '../actions/index';\nimport {\n    TextField,\n    Button,\n    Box\n} from '@material-ui/core';\n\nconst Show = props => {\n\n    function componentDidMount() {\n        props.store.subscribe(() => console.log(props.store.getState()))\n    }\n    const [elm, setElm] = useState('');\n\n    const useStyless = makeStyles(theme => ({\n        padd: {\n            padding: theme.spacing(3, 2),\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            alignItems: 'center'\n        }\n    }));\n\n    const classes = useStyless();\n    const handelChange = event => {\n        \n    }\n    const handleDel = id => {\n        console.log(\"Remove button is clicked\")\n        props.store.dispatch(delTodo(id));\n    }\n    const handleEdit = id => {\n\n    }\n    const handleChange = event => {\n        console.log(\"change is affected\")\n        setElm(event.target.value);\n    }\n    return (\n        <React.Fragment>\n            <Container className={\n                classes.padd\n            }>\n                <Box position='static' display='flex' flexDirection='row'>\n                    <TextField id=\"normal-textarea\" label=\"ToDo ...\" placeholder=\"Memorizable thing ;)\"\n                        value={elm}\n                        margin=\"normal\"\n                        onChange={\n                            handleChange\n                            \n                        }/>\n                    <Button variant='outlined' size=\"small\" color='primary' \n                        onClick={\n                            () => {\n                                props.store.dispatch(addTodo({id: props.store.getState().length, content: elm, visiblity: true}));\n                                setElm('')\n                            }\n                    }>\n                        Add\n                    </Button>\n                </Box>\n                {\n                props.store.getState().map((item, i) => {\n                    return (\n                        <ToDo item={item}\n                            id={i}\n                            isEditing={false}\n                            handelChange={handelChange}\n                            handleEdit={handleEdit}\n                            handleDel={handleDel}/>\n                    )\n                })\n            } </Container>\n        </React.Fragment>\n    );\n}\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}