{"ast":null,"code":"const initState = [{\n  id: 0,\n  content: 'this is a test',\n  visibility: true\n}];\n\nfunction reducer(state = initState, action) {\n  switch (action.type) {\n    case 'ADD':\n      return [...state, action.item];\n\n    case 'DEL':\n      let purged = [];\n      purged = purged.concat(state);\n      return purged.filter(item => item.id !== action.id);\n\n    case 'EDIT':\n      let id = action.item.id;\n      let target = action.item;\n      let edited = Object.assign([], state, {\n        [id]: target\n      });\n      console.log(target);\n      return edited;\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/hadi/Documents/projects/dump/my-portfolio/src/reducers/todo.js"],"names":["initState","id","content","visibility","reducer","state","action","type","item","purged","concat","filter","target","edited","Object","assign","console","log"],"mappings":"AAAA,MAAMA,SAAS,GAAG,CAAC;AACXC,EAAAA,EAAE,EAAE,CADO;AAEXC,EAAAA,OAAO,EAAE,gBAFE;AAGXC,EAAAA,UAAU,EAAE;AAHD,CAAD,CAAlB;;AAMA,SAASC,OAAT,CAAiBC,KAAK,GAAGL,SAAzB,EAAoCM,MAApC,EAA4C;AACxC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CACH,GAAIF,KADD,EAEHC,MAAM,CAACE,IAFJ,CAAP;;AAIJ,SAAK,KAAL;AACI,UAAIC,MAAM,GAAG,EAAb;AACAA,MAAAA,MAAM,GAAGA,MAAM,CAACC,MAAP,CAAcL,KAAd,CAAT;AACA,aAAOI,MAAM,CAACE,MAAP,CAAcH,IAAI,IAAKA,IAAI,CAACP,EAAL,KAAYK,MAAM,CAACL,EAA1C,CAAP;;AACJ,SAAK,MAAL;AACI,UAAIA,EAAE,GAAGK,MAAM,CAACE,IAAP,CAAYP,EAArB;AACA,UAAIW,MAAM,GAAGN,MAAM,CAACE,IAApB;AACA,UAAIK,MAAM,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyB;AAAC,SAACJ,EAAD,GAAMW;AAAP,OAAzB,CAAb;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,aAAOC,MAAP;;AACJ;AACI,aAAOR,KAAP;AAjBR;AAmBH;;AACD,eAAeD,OAAf","sourcesContent":["const initState = [{\n        id: 0,\n        content: 'this is a test',\n        visibility: true\n    }];\n\nfunction reducer(state = initState, action) {\n    switch (action.type) {\n        case 'ADD':\n            return [\n                ... state,\n                action.item\n            ];\n        case 'DEL':\n            let purged = [];\n            purged = purged.concat(state);\n            return purged.filter(item => (item.id !== action.id))\n        case 'EDIT':\n            let id = action.item.id;\n            let target = action.item;\n            let edited = Object.assign([], state, {[id]: target})\n            console.log(target)\n            return edited;\n        default:\n            return state;\n    }\n}\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}