{"ast":null,"code":"import _slicedToArray from \"/home/hadi/Documents/projects/dump/my-Todo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hadi/Documents/projects/dump/my-Todo/src/components/todo.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, TextField, ListItemSecondaryAction, ListItem, ListItemIcon, ListItemText, Checkbox } from '@material-ui/core';\nconst useStyless = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2),\n    backgroundColor: '#607d8b',\n    color: 'white',\n    marginTop: '10px',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    minWidth: '500px'\n  }\n}));\n\nconst Content = props => {\n  const _React$useState = React.useState(props.item.content),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        cont = _React$useState2[0],\n        setCont = _React$useState2[1];\n\n  const handleChange = event => {\n    setCont(event.target.value);\n  };\n\n  const handleDone = () => {\n    //props.item.content = cont;\n    props.handleEdit(Object.assign({}, props.item, {\n      content: cont\n    }));\n    props.setEdit(false);\n  };\n\n  const handleCancel = () => {\n    props.setEdit(false);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"normal-textarea\",\n    label: \"ToDo ...\",\n    placeholder: \"Memorizable thing ;)\",\n    value: cont,\n    margin: \"normal\",\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: handleDone,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Done\"), React.createElement(Button, {\n    onClick: handleCancel,\n    color: \"inherit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Cancel\"));\n};\n\nconst Cart = props => {\n  const _React$useState3 = React.useState(props.isEditing),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        edit = _React$useState4[0],\n        setEdit = _React$useState4[1];\n\n  const handleClick = () => {\n    props.handleDel(props.item);\n  };\n\n  const handleEdit = () => {\n    setEdit(true);\n  };\n\n  const _React$useState5 = React.useState([0]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        checked = _React$useState6[0],\n        setChecked = _React$useState6[1];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  return React.createElement(ListItem, {\n    role: undefined,\n    dense: true,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ListItemIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    edge: \"start\",\n    tabIndex: -1,\n    disableRipple: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), edit ? React.createElement(Content, {\n    item: props.item,\n    setEdit: setEdit,\n    handleEdit: props.handleEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, null, React.createElement(ListItemText, {\n    primary: props.item.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    color: \"primary\",\n    \"aria-label\": \"full-width contained primary button group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: handleEdit,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Edit\"), React.createElement(Button, {\n    onClick: handleClick,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Remove\"))));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/home/hadi/Documents/projects/dump/my-Todo/src/components/todo.js"],"names":["React","Typography","makeStyles","Box","Button","TextField","ListItemSecondaryAction","ListItem","ListItemIcon","ListItemText","Checkbox","useStyless","theme","root","padding","spacing","backgroundColor","color","marginTop","display","flexDirection","justifyContent","minWidth","Content","props","useState","item","content","cont","setCont","handleChange","event","target","value","handleDone","handleEdit","Object","assign","setEdit","handleCancel","Cart","isEditing","edit","handleClick","handleDel","checked","setChecked","handleToggle","currentIndex","indexOf","newChecked","push","splice","undefined"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SACIC,GADJ,EAEIC,MAFJ,EAGIC,SAHJ,EAIIC,uBAJJ,EAKIC,QALJ,EAMIC,YANJ,EAOIC,YAPJ,EAQIC,QARJ,QASS,mBATT;AAWA,MAAMC,UAAU,GAAGT,UAAU,CAACU,KAAK,KAAK;AACpCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiB,CAAjB,CADP;AAEFC,IAAAA,eAAe,EAAE,SAFf;AAGFC,IAAAA,KAAK,EAAE,OAHL;AAIFC,IAAAA,SAAS,EAAE,MAJT;AAKFC,IAAAA,OAAO,EAAE,MALP;AAMFC,IAAAA,aAAa,EAAE,KANb;AAOFC,IAAAA,cAAc,EAAE,cAPd;AAQFC,IAAAA,QAAQ,EAAE;AARR;AAD8B,CAAL,CAAN,CAA7B;;AAaA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,0BACGxB,KAAK,CAACyB,QAAN,CAAeD,KAAK,CAACE,IAAN,CAAWC,OAA1B,CADH;AAAA;AAAA,QACdC,IADc;AAAA,QACRC,OADQ;;AAGrB,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC1BF,IAAAA,OAAO,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAG,MAAM;AACrB;AACAV,IAAAA,KAAK,CAACW,UAAN,CAAiBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBb,KAAK,CAACE,IAAxB,EAA8B;AAACC,MAAAA,OAAO,EAACC;AAAT,KAA9B,CAAjB;AACAJ,IAAAA,KAAK,CAACc,OAAN,CAAc,KAAd;AACH,GAJD;;AAKA,QAAMC,YAAY,GAAG,MAAM;AACvBf,IAAAA,KAAK,CAACc,OAAN,CAAc,KAAd;AACP,GAFG;;AAGA,SACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,SAAD;AAAW,IAAA,EAAE,EAAC,iBAAd;AAAgC,IAAA,KAAK,EAAC,UAAtC;AAAiD,IAAA,WAAW,EAAC,sBAA7D;AACI,IAAA,KAAK,EACDV,IAFR;AAII,IAAA,MAAM,EAAC,QAJX;AAKI,IAAA,QAAQ,EAAEE,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAOR,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,UAAjB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPQ,EAQR,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEK,YAAjB;AAA+B,IAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARQ,CADJ;AAYH,CA1BD;;AA4BA,MAAMC,IAAI,GAAGhB,KAAK,IAAI;AAAA,2BACMxB,KAAK,CAACyB,QAAN,CAAeD,KAAK,CAACiB,SAArB,CADN;AAAA;AAAA,QACXC,IADW;AAAA,QACLJ,OADK;;AAGlB,QAAMK,WAAW,GAAG,MAAM;AACtBnB,IAAAA,KAAK,CAACoB,SAAN,CAAgBpB,KAAK,CAACE,IAAtB;AACH,GAFD;;AAGA,QAAMS,UAAU,GAAG,MAAM;AACrBG,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;;AANkB,2BAUYtC,KAAK,CAACyB,QAAN,CAAe,CAAC,CAAD,CAAf,CAVZ;AAAA;AAAA,QAUXoB,OAVW;AAAA,QAUFC,UAVE;;AAYlB,QAAMC,YAAY,GAAGd,KAAK,IAAI,MAAM;AACpC,UAAMe,YAAY,GAAGH,OAAO,CAACI,OAAR,CAAgBhB,KAAhB,CAArB;AACA,UAAMiB,UAAU,GAAG,CAAC,GAAGL,OAAJ,CAAnB;;AAED,QAAIG,YAAY,KAAK,CAAC,CAAtB,EAAyB;AACvBE,MAAAA,UAAU,CAACC,IAAX,CAAgBlB,KAAhB;AACD,KAFD,MAEO;AACLiB,MAAAA,UAAU,CAACE,MAAX,CAAkBJ,YAAlB,EAAgC,CAAhC;AACD;;AAEDF,IAAAA,UAAU,CAACI,UAAD,CAAV;AACD,GAXE;;AAYA,SACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEG,SAAhB;AAA2B,IAAA,KAAK,MAAhC;AAAiC,IAAA,MAAM,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAE,CAAC,CAFb;AAGE,IAAA,aAAa,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFN,EAUOX,IAAD,GACI,oBAAC,OAAD;AAAS,IAAA,IAAI,EAAElB,KAAK,CAACE,IAArB;AAA2B,IAAA,OAAO,EAAEY,OAApC;AAA6C,IAAA,UAAU,EAAEd,KAAK,CAACW,UAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAGI,0CACA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEX,KAAK,CAACE,IAAN,CAAWC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,WAAD;AACJ,IAAA,OAAO,EAAC,WADJ;AAEJ,IAAA,KAAK,EAAC,SAFF;AAGJ,kBAAW,2CAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKJ,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEQ,UAAjB;AAA6B,IAAA,KAAK,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALI,EAMN,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEQ,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANM,CAFA,CAbV,CADF;AAkCH,CA1DD;;AA4DA,eAAeH,IAAf","sourcesContent":["import React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {\n    Box,\n    Button,\n    TextField,\n    ListItemSecondaryAction,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Checkbox\n  } from '@material-ui/core';\n\nconst useStyless = makeStyles(theme => ({\n    root: {\n        padding: theme.spacing(3, 2),\n        backgroundColor: '#607d8b',\n        color: 'white',\n        marginTop: '10px',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        minWidth: '500px'\n    }\n}));\n\nconst Content = props => {\n    const [cont, setCont] = React.useState(props.item.content);\n\n    const handleChange = event => {\n        setCont(event.target.value)\n    }\n    const handleDone = () => {\n        //props.item.content = cont;\n        props.handleEdit(Object.assign({}, props.item, {content:cont}))\n        props.setEdit(false)\n    }\n    const handleCancel = () => {\n        props.setEdit(false)\n}\n    return (\n        <React.Fragment>\n        <TextField id=\"normal-textarea\" label=\"ToDo ...\" placeholder=\"Memorizable thing ;)\"\n            value={\n                cont\n            }\n            margin=\"normal\"\n            onChange={handleChange}/>\n<Button onClick={handleDone} color='inherit'>Done</Button>\n<Button onClick={handleCancel} color='inherit'>Cancel</Button>\n        </React.Fragment>\n    );\n}\n\nconst Cart = props => {\n    const [edit, setEdit] = React.useState(props.isEditing);\n\n    const handleClick = () => {\n        props.handleDel(props.item)\n    }\n    const handleEdit = () => {\n        setEdit(true);\n    }\n\n    const [checked, setChecked] = React.useState([0]);\n\n    const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n   if (currentIndex === -1) {\n     newChecked.push(value);\n   } else {\n     newChecked.splice(currentIndex, 1);\n   }\n\n   setChecked(newChecked);\n };\n    return (\n      <ListItem role={undefined} dense button >\n\n            <ListItemIcon>\n              <Checkbox\n                edge=\"start\"\n                tabIndex={-1}\n                disableRipple\n              />\n            </ListItemIcon>\n            {\n            (edit) ? (\n                <Content item={props.item} setEdit={setEdit} handleEdit={props.handleEdit}/>\n            ) : (\n                <>\n                <ListItemText primary={props.item.content} />\n                <ButtonGroup\n            variant=\"contained\"\n            color=\"primary\"\n            aria-label=\"full-width contained primary button group\"\n          >\n            <Button onClick={handleEdit} color=\"primary\">Edit</Button>\n          <Button onClick={handleClick} color=\"primary\">Remove</Button>\n          </ButtonGroup>\n                {/* <ListItemSecondaryAction>\n                  <Button onClick={handleEdit} color=\"primary\">Edit</Button>\n                <Button onClick={handleClick} color=\"primary\">Remove</Button>\n                </ListItemSecondaryAction> */}\n                </>\n            )\n          }\n          </ListItem>\n\n    );\n}\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}